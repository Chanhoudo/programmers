# -*- coding: utf-8 -*-
"""공원.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dqmLi-jceR55Z1ETOkxs1s0hjpeptvkY
"""

def solution(mats, park):
    answer = 0
    w_max = 0

    # 공원의 각 위치를 검사하면서 최대 정사각형 크기 찾기
    for p in range(len(park)):
        for p_w in range(len(park[p])):
            if park[p][p_w] == "-1":
                w = 0
                valid_square = True

                # 가능한 최대 크기의 정사각형 찾기
                while p + w < len(park) and p_w + w < len(park[p]) and valid_square:
                    # 현재 w 크기에서 정사각형 내부를 검사
                    for i in range(w + 1):
                        # 정사각형의 오른쪽, 아래쪽, 대각선 확인
                        if p + i >= len(park) or p_w + w >= len(park[p]) or p + w >= len(park) or p_w + i >= len(park[p]):
                            valid_square = False
                            break

                        if (park[p + w][p_w + i] != "-1" or
                            park[p + i][p_w + w] != "-1"):
                            valid_square = False
                            break

                    if valid_square:
                        w += 1

                # 최대 크기 갱신
                if w_max < w:
                    w_max = w

                # 디버깅 출력
                print(f"위치 ({p}, {p_w})에서 찾은 최대 정사각형 크기: {w}")

    # 가능한 매트 중 가장 큰 크기 찾기
    for mat in mats:
        if mat <= w_max:
            answer = max(answer, mat)

    # 디버깅 출력
    print(f"최대 정사각형 크기: {w_max}, 선택된 매트 크기: {answer}")

    return answer